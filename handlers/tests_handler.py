from telebot import types
from database.session import SessionLocal
from database.models import Test, UserTestProgress, Admin
import traceback

def show_tests_menu(bot, message, user_id):
    try:
        print("–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤ –≤—ã–∑–≤–∞–Ω–æ")
        db = SessionLocal()
        tests = db.query(Test).all()
        
        if not tests:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="training"))
            bot.send_message(message.chat.id, "üìù –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–µ—Å—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.", reply_markup=markup)
            return
            
        markup = types.InlineKeyboardMarkup(row_width=1)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        completed_tests = {progress.test_id for progress in 
                         db.query(UserTestProgress).filter(
                             UserTestProgress.user_id == user_id,
                             UserTestProgress.completed == True
                         )}
        
        for test in tests:
            emoji = "‚úÖ" if test.id in completed_tests else "üìù"
            btn = types.InlineKeyboardButton(
                f"{emoji} {test.title}",
                url=test.url,
                callback_data=f"test_start:{test.id}"
            )
            markup.add(btn)
        
        markup.add(types.InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="training"))
        
        bot.send_message(
            message.chat.id,
            "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Å—Ç—ã. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:",
            reply_markup=markup
        )
    except Exception as e:
        print(f"Error in show_tests_menu: {e}")
        traceback.print_exc()
        bot.send_message(message.chat.id, "‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–µ—Å—Ç–æ–≤")
    finally:
        db.close()

def show_edit_tests_menu(bot, message, user_id):
    try:
        print(f"–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        db_admin = SessionLocal()
        is_admin = db_admin.query(Admin).filter(Admin.auth_token == str(user_id)).first() is not None
        db_admin.close()
        
        if not is_admin:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤")
            return
        
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
        db = SessionLocal()
        tests = db.query(Test).all()
        print(f"–ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {len(tests)}")
        
        markup = types.InlineKeyboardMarkup(row_width=1)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
        for test in tests:
            btn = types.InlineKeyboardButton(
                f"‚úèÔ∏è {test.title}",
                callback_data=f"edit_test:{test.id}"
            )
            markup.add(btn)
        
        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞
        markup.add(types.InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ—Å—Ç", callback_data="add_new_test"))
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        markup.add(types.InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="training"))
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        print("–û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤")
        bot.send_message(
            message.chat.id,
            "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤:",
            reply_markup=markup
        )
    except Exception as e:
        print(f"Error in show_edit_tests_menu: {e}")
        traceback.print_exc()
        bot.send_message(message.chat.id, "‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–µ—Å—Ç–æ–≤")
    finally:
        if 'db' in locals() and db:
            db.close()

def add_test(section, title, url):
    db = SessionLocal()
    try:
        new_test = Test(section=section, title=title, url=url)
        db.add(new_test)
        db.commit()
        print(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ç–µ—Å—Ç: {title}")
    except Exception as e:
        db.rollback()
        print(f"Error adding test: {e}")
        traceback.print_exc()
        raise
    finally:
        db.close()