from telebot import types
from database.models import TourRegistration, CompanyTour, User_info, Admin
from database.session import SessionLocal
from datetime import datetime
from services.auth_check import require_auth
tour_message_ids = {}
def register_tour_handlers(bot):
    @bot.callback_query_handler(func=lambda call: call.data.startswith("register_tour:"))
    @require_auth(bot)
    def handle_register_tour(call):
        tour_id = int(call.data.split(":")[1])
        user_token = str(call.from_user.id)

        db = SessionLocal()
        tour = db.query(CompanyTour).get(tour_id)
        user_info = db.query(User_info).filter(User_info.auth_token == user_token).first()

        if not tour:
            bot.answer_callback_query(call.id, "–≠–∫—Å–∫—É—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        if len(tour.registrations) >= tour.max_participants:
            bot.answer_callback_query(call.id, "–ú–µ—Å—Ç –±–æ–ª—å—à–µ –Ω–µ—Ç")
            return

        existing = db.query(TourRegistration).filter(
            TourRegistration.tour_id == tour_id,
            TourRegistration.user_auth_token == user_token
        ).first()

        if existing:
            bot.answer_callback_query(call.id, "–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã")
            return

        registration = TourRegistration(
            tour_id=tour_id,
            user_auth_token=user_token
        )
        db.add(registration)
        db.commit()
        bot.answer_callback_query(call.id, "–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å!")

        bot.send_message(
            call.message.chat.id,
            f"‚úÖ –í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ '{tour.title}' –≤ {tour.meeting_time.strftime('%d.%m.%Y %H:%M')}"
        )

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        admins = db.query(Admin)
        print(admins)
        for admin in admins:
            print(admin)
            bot.send_message(
                admin.auth_token,
                f"üîî –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é:\n"
                f"üë§ {user_info.full_name}\n"
                f"üèõ {tour.title}\n"
                f"üïí {tour.meeting_time.strftime('%d.%m.%Y %H:%M')}"
            )