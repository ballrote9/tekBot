from telebot import types
from database.session import SessionLocal
from database.content_session import ContentSessionLocal
from database.models import Admin, Content
import os

from services.auth_check import require_auth
from services.content_service import show_content


    # –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –º–µ–Ω—é –¥–ª—è –ø—É–Ω–∫—Ç–∞ "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏" –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def register_about_company_menu_handler(bot):
    # –õ–æ–≤–∏—Ç –∫–æ–ª–±–µ–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–ª–±–µ–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –∏–∑ –ø–æ–¥–º–µ–Ω—é "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏"
    @bot.callback_query_handler(func=lambda call: call.data in ["history", "values", "info"])
    @require_auth(bot)
    def callback_handler(call):
        markup = types.InlineKeyboardMarkup(row_width=1)
        buttons = []
        db = SessionLocal()
        if (db.query(Admin).filter(call.from_user.id == Admin.auth_token).first()):
            buttons.append(types.InlineKeyboardButton(f"–ò–∑–º–µ–Ω–∏—Ç—å", callback_data=f'edit_section:{call.data}:training'))
            buttons.append(types.InlineKeyboardButton(f"–ù–∞–∑–∞–¥", callback_data='training'))
        markup.add(*buttons)

        if call.data == "info":
            markup = types.InlineKeyboardMarkup(row_width=1)
            buttons = [
                types.InlineKeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–ø–∞–Ω–∏–∏", callback_data="history"),
                types.InlineKeyboardButton("–¶–µ–Ω–Ω–æ—Å—Ç–∏", callback_data="values"),
                types.InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_main")
            ]
           
            markup.add(*buttons)

            bot.send_message(
                call.message.chat.id,
                "üìö –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏.",
                reply_markup=markup
            )
        else:
            show_content(bot, call, markup)
    