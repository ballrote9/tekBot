from telebot import types
import hashlib
from database.models import User, User_info, Authorized_users, Admin
from database.session import SessionLocal


def show_main_menu(bot, message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    buttons = [
        types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏", callback_data="info"),
        types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", callback_data="training"),
        types.InlineKeyboardButton("FAQ", callback_data="faq"),
        types.InlineKeyboardButton("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", callback_data="feedback"),
        types.InlineKeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")
    ]
    db = SessionLocal()
    if (db.query(Admin).filter(message.from_user.id == Admin.auth_token)):
        buttons.append(types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å", callback_data='change_data'))
    markup.add(*buttons)
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=markup
    )

# --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ---
def register_start_handler(bot):
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    def handle_password(message, sent=None):
        entered_password = message.text.strip()
        hashed_password = hashlib.sha256(entered_password.encode()).hexdigest()
        telegram_id = message.from_user.id
        found = False
        db = SessionLocal()

        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–µ–¥–∏ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –ø–æ —á—É–∂–æ–º—É –ø–∞—Ä–æ–ª—é
        auth_user = db.query(Authorized_users).filter(Authorized_users.auth_token == telegram_id).first()
        if auth_user:
            if hashed_password == auth_user.user.hash_pass:
                found = True
                user = auth_user.user
            else: 
                bot.delete_message(message.chat.id, sent.message_id)
                bot.delete_message(message.chat.id, message.message_id)
                sent = bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.\r\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
            
                bot.register_next_step_handler(message, handle_password, sent)
                return
        # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤
        if not found:
            user_entry = db.query(User)
            for user in user_entry:
                if hashed_password == user.hash_pass and not user.is_authorized:
                    found = True
                    break

        if not found:
            bot.delete_message(message.chat.id, sent.message_id)
            bot.delete_message(message.chat.id, message.message_id)
            sent = bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.\r\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
            
            bot.register_next_step_handler(message, handle_password, sent)
            return
        

        # –û–±–Ω–æ–≤–ª—è–µ–º auth_token –Ω–∞ telegram_id –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        if not user.is_authorized:
            user_info = user.user_info
            user_info.auth_token = str(telegram_id)
            user.auth_token = str(telegram_id)
            user.is_authorized = True
            db.add(Authorized_users(
                auth_token = user.auth_token
            ))
            db.commit()

            bot.delete_message(message.chat.id, sent.message_id)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, {user_info.full_name}!")

        else:
            bot.delete_message(message.chat.id, sent.message_id)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, {user.user_info.full_name}!")
        db.close()

    
    @bot.message_handler(commands=["start"])
    def send_welcome(message):
        sent = bot.send_message(
            message.chat.id,
            "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:"
        )
        bot.register_next_step_handler(message, handle_password, sent)
    
    @bot.message_handler(commands=['profile'])
    def profile(message):
        telegram_id = message.from_user.id
        db = SessionLocal()

        user_info = db.query(User_info).filter(User_info.auth_token == str(telegram_id)).first()

        if user_info:
            bot.reply_to(message,
                f"–§–ò–û: {user_info.full_name}\n"
                f"Email: {user_info.mail}\n"
                f"–û—Ñ–∏—Å: {user_info.office}")
        else:
            bot.reply_to(message, "–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.")

        db.close()    

    @bot.message_handler(commands=["menu"])
    def show_menu(message):
        show_main_menu(bot, message)
        
    def greetings(message):
        bot.send_message(
            message.chat.id,
            "'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞'"
        )
        bot.send_message(
            message.chat.id,
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, \"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'\")."
        )