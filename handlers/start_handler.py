from telebot import types
import hashlib
from database.models import User, User_info
from database.session import SessionLocal
from database.helpers import verify_password

def show_main_menu(bot, message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    buttons = [
        types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏", callback_data="info"),
        types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", callback_data="training"),
        types.InlineKeyboardButton("FAQ", callback_data="faq"),
        types.InlineKeyboardButton("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", callback_data="feedback"),
        types.InlineKeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")
    ]
    markup.add(*buttons)
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=markup
    )

# --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ---
def register_start_handler(bot):
    @bot.message_handler(commands=["start"])
    def send_welcome(message):
        bot.send_message(
            message.chat.id,
            "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:"
        )
    
    @bot.message_handler(commands=['profile'])
    def profile(message):
        telegram_id = message.from_user.id
        db = SessionLocal()

        user_info = db.query(User_info).filter(User_info.auth_token == str(telegram_id)).first()

        if user_info:
            bot.reply_to(message,
                f"–§–ò–û: {user_info.full_name}\n"
                f"Email: {user_info.mail}\n"
                f"–û—Ñ–∏—Å: {user_info.office}")
        else:
            bot.reply_to(message, "–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.")

        db.close()    

    @bot.message_handler(commands=["menu"])
    def show_menu(message):
        show_main_menu(bot, message)
        
    
def catching_all_masseges(bot):
    @bot.message_handler(func=lambda message: True)
    def handle_password(message):
        entered_password = message.text.strip()
        telegram_id = message.from_user.id
        users_id = None
        db = SessionLocal()

        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ø–∞—Ä–æ–ª—é
        user_entry = db.query(User)

        found = False
        for user in user_entry:
            if hashlib.sha256(entered_password.encode()).hexdigest() == user.hash_pass:
                found = True
                users_id = user.auth_token
                break

        if not found:
            bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º auth_token –Ω–∞ telegram_id –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        # db.commit()
        if (telegram_id != users_id):
            user_info = db.query(User_info).filter(User_info.auth_token == user.auth_token).first()
            if user_info:
                user_info.auth_token = str(telegram_id)
                user.auth_token = str(telegram_id)
                db.commit()
                bot.reply_to(message, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, {user_info.full_name}!")
            else:
                bot.reply_to(message, "–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            bot.reply_to(message, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, {user_info.full_name}!")
        db.close()
        #Unique error (try/catch)
        
        
